name: CI Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    # Required services    
    services:
      postgres:
        image: postgres
      
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          
    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Install libraries for PostgreSQL
        run: |
          apt-get update
          apt-get install -y gcc libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          
      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 service tests --count --select=E9,F63,F7,F82 --show-source --statistics
          # test for complexity. The GitHub editor is 127 chars wide
          flake8 service tests --count --max-complexity=10 --max-line-length=127 --statistics
          # Run pylint to catch other PEP8 errors
          pylint service tests --max-line-length=127

      # - name: Run unit tests with PyTest
      #   run: pytest --pspec --cov=service --cov-fail-under=95
      #   env:
      #     DATABASE_URI: "redis://redis:6379"
      - name: Run unit tests with green
        run: |
          # export FLASK_APP=service:app
          green -vvv --processes=1 --run-coverage --termcolor --minimum-coverage=95
        env:
          DATABASE_URI: "postgresql://postgres:postgres@postgres:5432/postgres"

      # Uncomment the following 2 lines during hands-on lab
      
      - name: Upload code coverage
        uses: codecov/codecov-action@v3.1.4
  
